// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
